/* Generated By:JavaCC: Do not edit this line. CopyBookParserConstants.java */
package com.asksunny.copybook;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CopyBookParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int EOL = 1;
  /** RegularExpression Id. */
  int SPACECHAR = 2;
  /** RegularExpression Id. */
  int COMMENT = 3;
  /** RegularExpression Id. */
  int SPACE_SEPARATOR = 4;
  /** RegularExpression Id. */
  int COMMA_SEPARATOR = 5;
  /** RegularExpression Id. */
  int DOT = 6;
  /** RegularExpression Id. */
  int BINARY = 7;
  /** RegularExpression Id. */
  int BY = 8;
  /** RegularExpression Id. */
  int COMP = 9;
  /** RegularExpression Id. */
  int COMP_1 = 10;
  /** RegularExpression Id. */
  int COMP_2 = 11;
  /** RegularExpression Id. */
  int COMP_3 = 12;
  /** RegularExpression Id. */
  int COMP_4 = 13;
  /** RegularExpression Id. */
  int COMP_5 = 14;
  /** RegularExpression Id. */
  int COMPUTATIONAL = 15;
  /** RegularExpression Id. */
  int COMPUTATIONAL_1 = 16;
  /** RegularExpression Id. */
  int COMPUTATIONAL_2 = 17;
  /** RegularExpression Id. */
  int COMPUTATIONAL_3 = 18;
  /** RegularExpression Id. */
  int COMPUTATIONAL_4 = 19;
  /** RegularExpression Id. */
  int COMPUTATIONAL_5 = 20;
  /** RegularExpression Id. */
  int DEPENDING = 21;
  /** RegularExpression Id. */
  int DISPLAY = 22;
  /** RegularExpression Id. */
  int DISPLAY_1 = 23;
  /** RegularExpression Id. */
  int INDEX = 24;
  /** RegularExpression Id. */
  int INDEXED = 25;
  /** RegularExpression Id. */
  int IS = 26;
  /** RegularExpression Id. */
  int LEADING = 27;
  /** RegularExpression Id. */
  int OCCURS = 28;
  /** RegularExpression Id. */
  int PACKED_DECIMAL = 29;
  /** RegularExpression Id. */
  int RECORD = 30;
  /** RegularExpression Id. */
  int REDEFINES = 31;
  /** RegularExpression Id. */
  int USAGE = 32;
  /** RegularExpression Id. */
  int VALUE = 33;
  /** RegularExpression Id. */
  int THROUGH = 34;
  /** RegularExpression Id. */
  int HEXNUMBER = 35;
  /** RegularExpression Id. */
  int LEVEL_66 = 36;
  /** RegularExpression Id. */
  int LEVEL_77 = 37;
  /** RegularExpression Id. */
  int LEVEL_88 = 38;
  /** RegularExpression Id. */
  int LEVEL_NUMBER = 39;
  /** RegularExpression Id. */
  int DATATYPE = 40;
  /** RegularExpression Id. */
  int INTEGER = 41;
  /** RegularExpression Id. */
  int IMPLICIT_DECIMAL = 42;
  /** RegularExpression Id. */
  int SIGN_INDICATOR = 43;
  /** RegularExpression Id. */
  int MINUSCHAR = 44;
  /** RegularExpression Id. */
  int LPARENCHAR = 45;
  /** RegularExpression Id. */
  int RPARENCHAR = 46;
  /** RegularExpression Id. */
  int COLONCHAR = 47;
  /** RegularExpression Id. */
  int DOTCHAR = 48;
  /** RegularExpression Id. */
  int COMMACHAR = 49;
  /** RegularExpression Id. */
  int DOUBLEDQUOTECHAR = 50;
  /** RegularExpression Id. */
  int QUOTECHAR = 51;
  /** RegularExpression Id. */
  int DOUBLEDAPOSTROPHE = 52;
  /** RegularExpression Id. */
  int APOSTROPHE = 53;
  /** RegularExpression Id. */
  int PLUSCHAR = 54;
  /** RegularExpression Id. */
  int ASTERISKCHAR = 55;
  /** RegularExpression Id. */
  int SLASHCHAR = 56;
  /** RegularExpression Id. */
  int DOLLARCHAR = 57;
  /** RegularExpression Id. */
  int QUOTEDSTRING = 58;
  /** RegularExpression Id. */
  int COBOL_WORD = 59;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\n\"",
    "<SPACECHAR>",
    "<COMMENT>",
    "<SPACE_SEPARATOR>",
    "<COMMA_SEPARATOR>",
    "<DOT>",
    "\"binary\"",
    "\"by\"",
    "\"comp\"",
    "\"comp-1\"",
    "\"comp-2\"",
    "\"comp-3\"",
    "\"comp-4\"",
    "\"comp-5\"",
    "\"computational\"",
    "\"computational-1\"",
    "\"computational-2\"",
    "\"computational-3\"",
    "\"computational-4\"",
    "\"computational-5\"",
    "\"depending\"",
    "\"display\"",
    "\"display-1\"",
    "\"index\"",
    "\"indexed\"",
    "\"is\"",
    "\"leading\"",
    "\"occurs\"",
    "\"packed-decimal\"",
    "\"record\"",
    "\"redefines\"",
    "\"usage\"",
    "\"value\"",
    "\"THROUGH\"",
    "<HEXNUMBER>",
    "\"66\"",
    "\"77\"",
    "\"88\"",
    "<LEVEL_NUMBER>",
    "<DATATYPE>",
    "<INTEGER>",
    "\"V\"",
    "\"S\"",
    "\"-\"",
    "\"(\"",
    "\")\"",
    "\":\"",
    "\".\"",
    "\",\"",
    "\"\\\"\\\"\"",
    "\"\\\"\"",
    "\"\\\'\\\'\"",
    "\"\\\'\"",
    "\"+\"",
    "\"*\"",
    "\"/\"",
    "\"$\"",
    "<QUOTEDSTRING>",
    "<COBOL_WORD>",
  };

}
